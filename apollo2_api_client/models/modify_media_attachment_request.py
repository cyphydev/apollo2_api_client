# coding: utf-8

"""
    Apollo2 API Server

    No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)  # noqa: E501

    OpenAPI spec version: 1.0.0
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six

class ModifyMediaAttachmentRequest(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'item_ids': 'list[int]',
        'media_ids': 'list[int]',
        'data': 'list[object]',
        'ignore_missing_when_deleting': 'bool'
    }

    attribute_map = {
        'item_ids': 'item_ids',
        'media_ids': 'media_ids',
        'data': 'data',
        'ignore_missing_when_deleting': 'ignore_missing_when_deleting'
    }

    def __init__(self, item_ids=None, media_ids=None, data=None, ignore_missing_when_deleting=True):  # noqa: E501
        """ModifyMediaAttachmentRequest - a model defined in Swagger"""  # noqa: E501
        self._item_ids = None
        self._media_ids = None
        self._data = None
        self._ignore_missing_when_deleting = None
        self.discriminator = None
        self.item_ids = item_ids
        self.media_ids = media_ids
        if data is not None:
            self.data = data
        if ignore_missing_when_deleting is not None:
            self.ignore_missing_when_deleting = ignore_missing_when_deleting

    @property
    def item_ids(self):
        """Gets the item_ids of this ModifyMediaAttachmentRequest.  # noqa: E501


        :return: The item_ids of this ModifyMediaAttachmentRequest.  # noqa: E501
        :rtype: list[int]
        """
        return self._item_ids

    @item_ids.setter
    def item_ids(self, item_ids):
        """Sets the item_ids of this ModifyMediaAttachmentRequest.


        :param item_ids: The item_ids of this ModifyMediaAttachmentRequest.  # noqa: E501
        :type: list[int]
        """
        if item_ids is None:
            raise ValueError("Invalid value for `item_ids`, must not be `None`")  # noqa: E501

        self._item_ids = item_ids

    @property
    def media_ids(self):
        """Gets the media_ids of this ModifyMediaAttachmentRequest.  # noqa: E501


        :return: The media_ids of this ModifyMediaAttachmentRequest.  # noqa: E501
        :rtype: list[int]
        """
        return self._media_ids

    @media_ids.setter
    def media_ids(self, media_ids):
        """Sets the media_ids of this ModifyMediaAttachmentRequest.


        :param media_ids: The media_ids of this ModifyMediaAttachmentRequest.  # noqa: E501
        :type: list[int]
        """
        if media_ids is None:
            raise ValueError("Invalid value for `media_ids`, must not be `None`")  # noqa: E501

        self._media_ids = media_ids

    @property
    def data(self):
        """Gets the data of this ModifyMediaAttachmentRequest.  # noqa: E501


        :return: The data of this ModifyMediaAttachmentRequest.  # noqa: E501
        :rtype: list[object]
        """
        return self._data

    @data.setter
    def data(self, data):
        """Sets the data of this ModifyMediaAttachmentRequest.


        :param data: The data of this ModifyMediaAttachmentRequest.  # noqa: E501
        :type: list[object]
        """

        self._data = data

    @property
    def ignore_missing_when_deleting(self):
        """Gets the ignore_missing_when_deleting of this ModifyMediaAttachmentRequest.  # noqa: E501


        :return: The ignore_missing_when_deleting of this ModifyMediaAttachmentRequest.  # noqa: E501
        :rtype: bool
        """
        return self._ignore_missing_when_deleting

    @ignore_missing_when_deleting.setter
    def ignore_missing_when_deleting(self, ignore_missing_when_deleting):
        """Sets the ignore_missing_when_deleting of this ModifyMediaAttachmentRequest.


        :param ignore_missing_when_deleting: The ignore_missing_when_deleting of this ModifyMediaAttachmentRequest.  # noqa: E501
        :type: bool
        """

        self._ignore_missing_when_deleting = ignore_missing_when_deleting

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(ModifyMediaAttachmentRequest, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, ModifyMediaAttachmentRequest):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
