# coding: utf-8

"""
    Apollo2 API Server

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)  # noqa: E501

    The version of the OpenAPI document: 1.0.0
    Generated by: https://openapi-generator.tech
"""


from __future__ import absolute_import

import unittest
import datetime

import apollo2_api_client
from apollo2_api_client.models.twitter_data import TwitterData  # noqa: E501
from apollo2_api_client.rest import ApiException

class TestTwitterData(unittest.TestCase):
    """TwitterData unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional):
        """Test TwitterData
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `TwitterData`
        """
        model = apollo2_api_client.models.twitter_data.TwitterData()  # noqa: E501
        if include_optional :
            return TwitterData(
                attachments = apollo2_api_client.models.twitter_attachment.TwitterAttachment(
                    media_keys = [
                        ''
                        ], ), 
                context_annotations = [
                    apollo2_api_client.models.twitter_context_annotation.TwitterContextAnnotation(
                        domain = apollo2_api_client.models.twitter_domain.TwitterDomain(
                            description = '', 
                            id = '', 
                            name = '', ), 
                        entity = apollo2_api_client.models.twitter_entity.TwitterEntity(
                            description = '', 
                            id = '', 
                            name = '', ), )
                    ], 
                author_id = '', 
                conversation_id = '', 
                created_at = '', 
                edit_controls = apollo2_api_client.models.twitter_edit_controls.TwitterEditControls(
                    editable_until = '', 
                    edits_remaining = 56, 
                    is_edit_eligible = True, ), 
                edit_history_tweet_ids = [
                    ''
                    ], 
                entities = apollo2_api_client.models.twitter_entities.TwitterEntities(
                    annotations = [
                        apollo2_api_client.models.twitter_annotation.TwitterAnnotation(
                            end = 56, 
                            normalized_text = '', 
                            probability = 1.337, 
                            start = 56, 
                            type = '', )
                        ], 
                    hashtags = [
                        apollo2_api_client.models.twitter_hashtag.TwitterHashtag(
                            end = 56, 
                            start = 56, 
                            tag = '', )
                        ], 
                    mentions = [
                        apollo2_api_client.models.twitter_mention.TwitterMention(
                            end = 56, 
                            id = '', 
                            start = 56, 
                            username = '', )
                        ], ), 
                id = '', 
                lang = '', 
                possibly_sensitive = True, 
                public_metrics = apollo2_api_client.models.twitter_public_metrics.TwitterPublicMetrics(
                    like_count = 56, 
                    quote_count = 56, 
                    reply_count = 56, 
                    retweet_count = 56, 
                    followers_count = 56, 
                    following_count = 56, 
                    listed_count = 56, 
                    tweet_count = 56, ), 
                reference_tweets = [
                    apollo2_api_client.models.twitter_referenced_tweet.TwitterReferencedTweet(
                        id = '', 
                        type = '', )
                    ], 
                reply_settings = '', 
                tweet_id = '', 
                twitter_author_screenname = '', 
                twitter_user_id = ''
            )
        else :
            return TwitterData(
        )
        """

    def testTwitterData(self):
        """Test TwitterData"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
