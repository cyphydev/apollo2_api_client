# coding: utf-8

"""
    Apollo2 API Server

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)  # noqa: E501

    The version of the OpenAPI document: 1.0.0
    Generated by: https://openapi-generator.tech
"""


from __future__ import absolute_import

import unittest
import datetime

import apollo2_api_client
from apollo2_api_client.models.incas_actor import IncasActor  # noqa: E501
from apollo2_api_client.rest import ApiException

class TestIncasActor(unittest.TestCase):
    """IncasActor unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional):
        """Test IncasActor
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `IncasActor`
        """
        model = apollo2_api_client.models.incas_actor.IncasActor()  # noqa: E501
        if include_optional :
            return IncasActor(
                annotations = [
                    apollo2_api_client.models.incas_annotation.IncasAnnotation(
                        attribute = '', 
                        confidence = 1.337, 
                        id = '', 
                        name = '', 
                        offsets = [
                            apollo2_api_client.models.incas_offset.IncasOffset(
                                begin = 56, 
                                end = 56, )
                            ], 
                        provider_name = '', 
                        text = '', 
                        type = '', )
                    ], 
                extra_attributes = [
                    apollo2_api_client.models.incas_extra_attribute.IncasExtraAttribute(
                        name = '', 
                        id = '', 
                        provider_name = '', 
                        attribute_key = '', 
                        attribute_value = '', )
                    ], 
                media_resources = [
                    apollo2_api_client.models.incas_media_resource.IncasMediaResource(
                        account_bio = '', 
                        account_id = '', 
                        account_status = '', 
                        account_type = 'MEDIA_UNSPECIFIED', 
                        display_names = [
                            ''
                            ], 
                        follower_count = 56, 
                        friends_count = 56, 
                        hashed_user_names = [
                            ''
                            ], 
                        language = '', 
                        url = '', 
                        user_names = [
                            ''
                            ], 
                        verified = True, )
                    ], 
                segments = [
                    apollo2_api_client.models.incas_segment.IncasSegment(
                        annotations = [
                            apollo2_api_client.models.incas_annotation.IncasAnnotation(
                                attribute = '', 
                                confidence = 1.337, 
                                id = '', 
                                name = '', 
                                offsets = [
                                    apollo2_api_client.models.incas_offset.IncasOffset(
                                        begin = 56, 
                                        end = 56, )
                                    ], 
                                provider_name = '', 
                                text = '', 
                                type = '', )
                            ], 
                        description = '', 
                        extra_attributes = [
                            apollo2_api_client.models.incas_extra_attribute.IncasExtraAttribute(
                                name = '', 
                                id = '', 
                                provider_name = '', 
                                attribute_key = '', 
                                attribute_value = '', )
                            ], 
                        id = '', 
                        name = '', 
                        provider_name = '', )
                    ], 
                actor_name = '', 
                description = '', 
                entity_type = 'ENTITY_UNSPECIFIED', 
                expose_actor_info = True, 
                id = '', 
                knowledge_base_url = '', 
                links = apollo2_api_client.models.incas_links.IncasLinks(
                    messages = '', 
                    self = '', ), 
                name = ''
            )
        else :
            return IncasActor(
        )
        """

    def testIncasActor(self):
        """Test IncasActor"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
